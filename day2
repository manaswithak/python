# sets in python
# not ordered (no index value),partially mutable(modified by methods)
# unique elements they dont allow duplicates

# b={1,2,3,4,5,6}
c={1,1,2,3,3,4,45,567,98,667,56677}
''' {1, 2, 3, 4, 98, 56677, 45, 567, 667} this will be the output for c as it doesnt allow duplicate value it doesnt print it 
 instead print only once'''
# print(b)
# print(type(b))
# print(c)
# print(b[1]) #you can't access it through index
# b[2]=25 
# print(b)
c.add("add")#add element in the set
print(c)
c.remove(667) #removes the element from the list 
c.remove("add")
print(c)
# c.remove("add") #this throws an error as add is already removed previously
c.discard("add") #this will not show any error it will just leave and proceed to nect line
print(c)
emset=set() #creating empty set -> set() this is printed
print(emset)
print(c)
print(10 in c) #this throws false as in is used to comapare the number in set if not there is shows false
print(45 in c) #this shows true as the element is present in the set
# c.clear()  #clears the set and shows set()
# print(c)
a={2,4,6,8,8,4,3,2,6}  
c.update(a)   #add the elemets of a to c which are unique
print(c)
c.pop()  #since no index and set are unordered so it wont remove last element but it removes any element
print(c)
# c.pop(2)  #this is not possible as set doesnt have index
# print(c)
e=c.copy()  #creates a duplicate copy of the elements present in the set
print(e)

#set operations
A={1,2,3,4,5,6}
B={7,8,9,5,6}
print(A.union(B)) # union(|) rints elments by combining both set and duplicates values will only be shown once
print(A|B)
print(A.intersection(B)) #intersection(&) elements which are present in both A and B
print(A&B)
print(A.difference(B)) #difference(-) elements which are in A but not in B
print(A-B)
print(B.difference(A)) #elements which are in B not in A 
print(B-A)
print(A.symmetric_difference(B)) #symmetric_difference(^) elemets which are not in both A and B
print(A^B)

x=frozenset([1,2,3,4,5]) #since set is partially mutable but using frozen set it becomes completely immutable means can't be changed it will be fixed
print(x)
x.add(8)  #it shows error as it is frozenset cant be modified
print(x)

#dictionary -> {key : value, key : value, key : value, key : value} dictionary has key and value through this can identify between set and dictionary
#unordered,mutable,key must be unique,cant have duplicates in key
#fast lookups using keys
# python dictionary can have "" or ''
#json ""
a={'name':"manaswitha","age":"25","subject":"python","istrainer":True}
print(a)
print(type(a))
print(a['name']) #give the value of the key typed
print(a['subject'])
a['name']='alias' #it changes the value of the key typed
print(a)
a['subject']='java'
a['istrainer']=False
print(a)
#in a dictionary you can have list tuple set or another dictionary also
a={'name':"manaswitha","age":25,"subject":"python","istrainer":True,'other':['joshwa','sujoi','sanyukta']} #list in dictionary
print(a)
print(a['other'])
a={'name':"manaswitha","age":25,"subject":"python","istrainer":True,'other':{'name':'joshwa','age':26}} #dictionary in dictionary
print(a)
print(a['other']['name'])
c={'name':"devipriya","age":"30","subject":"java"}
a.update(c) #to add the values of c to a if keys are same
print(a)
print(a.get('name')) #to get the value
print(a)

for i in c.keys():  #to get the key only name from dictionary
    print(i) 

for i in c.values():  #to get values only
    print(i)

for v,k in c.items():  #to get both key and value present in dictionary
    print("key = "+v)
    print("value = "+k)

a={'name':"manaswitha","age":"25","subject":"python","istrainer":True}
for v,k in a.items():  #to get both key and value present in dictionary
    print("key = "+v)
    # print("value = "+k)   #here you would get typeerror as in istrainer boolean is there and not string so we can only do str to str(two same operands)
    # so to change that we use +str(v) now it will be changed to string
    print("value = "+str(k))

# a.clear() #clears all the key value pairs on dictionaries
# print(a)

a.pop("age")  #this removes the entered key and its value from the dictionary
print(a)

#strings in python
b="good"  
"morning"
print(b)  #this doesnt print both the line of string
a='''GOOD MORNING   
GOOD AFTERNOON
GOOD EVENING'''
print(a)  #for printing multiline string u use '''typed in this will print'''
B="abcdefghijklmnopqrstuvwxyz"
print(B[5]) #accessing string via character
print(B[-1]) #-ve values print it in reverse
print(B[3:6])  #slicing
print(B[9:])
print(B[-6:])

#string methods
a="  abcdefghijklmnopqrstuvwxyz  "
b="123"
print(a.upper())   # changes lowercase to upper case
print(a.strip()+b)  #here strip is used to remove the space present in a an then adding b at end of a
print(a.replace("a","A"))  #it replaces your string with the given value
print(a.replace("abcd","1234"))

d="a,b,c,d,e,f,g,h,i,j,k"
c=d.split(",")  #converts the string to list. since in string each letter has, so in "," we use , as seperator
print(c)

e="a b c d e f g h"
x=e.split(" ")   #here since space is in string between elements we use space as seperator so in list elements can be identified
print(x)

print(" ".join(e))  #converts the list into string space is give to join the elemnts using space

e="a b c d e f g h"
d="a d g y j c d"
c=e+d
print(c.count("a"))  #count -> number of times the given string repeated in the original string
print(c.startswith("a b"))  #it gives in boolean form like True or False of the condition is there
print(c.endswith("j c d"))
print(c*3) #print c 3 times
print("a" in e) #gives output in True or False

 for input from user do in terminal dont run directly
# a=input() #input from user default input takes as string
#print("hello "+a)
# print("sum of a with 10 is",(a+10)) #this shows error as input only string not number
a=int(input("enter a"))  #input will be int
print("sum of a with 10 is",(a+10))


print("sum of a with 10 is",(a-10))


print(f"sum of a with 10 is{a*10}")  #another method for it


print("sum of a with 10 is",(a%10))


print("sum of a with 10 is",(a/10))


print("sum of a with 10 is",(a**10))  

#email validator
email = input("enter your email: ")
if "@" in email and email.endswith(".com"):
    print("valid email")
else:
    print("invalid email")

#arithmetic operator
a=10
b=3
print(a/b)
print(a//b) #this is floor division it give whole number

# if statement
age=18
if age >= 18:
    print("you are eligible to vote.")

#if else statement
age=18
if age >= 18:
    print("you are eligible to vote.")

else:
    print("not eligible to vote")

marks = 40
if marks >= 35:
    print("you passed")
else:
    print("you failed")

#input method
age=int(input("enter your age: "))
if age >= 18:
    print("you are eligible to vote.")

else:
    print("not eligible to vote")
